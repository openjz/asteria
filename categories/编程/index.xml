<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>编程 - Category - 星</title>
        <link>http://blog.shiwj.top/categories/%E7%BC%96%E7%A8%8B/</link>
        <description>编程 - Category - 星</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>shiwj1994@foxmail.com (shiwj)</managingEditor>
            <webMaster>shiwj1994@foxmail.com (shiwj)</webMaster><lastBuildDate>Tue, 20 Sep 2022 12:35:41 &#43;0800</lastBuildDate><atom:link href="http://blog.shiwj.top/categories/%E7%BC%96%E7%A8%8B/" rel="self" type="application/rss+xml" /><item>
    <title>取余和取模的区别</title>
    <link>http://blog.shiwj.top/15.remainder-and-modulo/</link>
    <pubDate>Tue, 20 Sep 2022 12:35:41 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/15.remainder-and-modulo/</guid>
    <description><![CDATA[注：以下使用 a % b 表示取余和取模运算 如果a和b都是正数，取余和取模没区别 例如，对于2 % 7，取余和取模的结果都是2，对于9 % 7，取余和取模的结]]></description>
</item>
<item>
    <title>线程什么时候终止</title>
    <link>http://blog.shiwj.top/14.threadexit/</link>
    <pubDate>Fri, 16 Sep 2022 08:34:03 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/14.threadexit/</guid>
    <description><![CDATA[之前一直有几个疑惑，比如， 一个线程终止后，它创建的其他线程如果没执行完，会跟着终止还是继续执行？ main函数返回后，其他没执行完的线程会终止]]></description>
</item>
<item>
    <title>mysql中的复杂查询</title>
    <link>http://blog.shiwj.top/13.mysql-complex-sql/</link>
    <pubDate>Thu, 28 Jul 2022 16:05:37 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/13.mysql-complex-sql/</guid>
    <description><![CDATA[group by&hellip;having 和 where 的区别 mysql 先对数据按照 where 子句过滤，然后在对返回的结果分组，最后对分组后的数据按照 having 子句过滤。 where 是对行过滤，而 having 是对分组过滤，所以可以在]]></description>
</item>
<item>
    <title>关于IP地址的发展</title>
    <link>http://blog.shiwj.top/ip-address/</link>
    <pubDate>Fri, 15 Jul 2022 10:45:00 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/ip-address/</guid>
    <description><![CDATA[IP地址的发展 最开始将IP地址分为ABCDE五类地址，后来为了不浪费IP地址资源提出了划分子网，发明了子网掩码，再后来又（在可变长子网掩码V]]></description>
</item>
<item>
    <title>Python 基础</title>
    <link>http://blog.shiwj.top/python-basic/</link>
    <pubDate>Fri, 08 Jul 2022 12:23:09 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/python-basic/</guid>
    <description><![CDATA[格式化输入输出 参考https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#for]]></description>
</item>
<item>
    <title>算法题</title>
    <link>http://blog.shiwj.top/algorithm-problem/</link>
    <pubDate>Wed, 06 Jul 2022 11:37:09 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/algorithm-problem/</guid>
    <description><![CDATA[常用方法 常用方法： 动态规划，把问题转化为子问题的求解，在子问题求解完成的基础上即可得到问题的解，重点在于（1）问题的建模，（2）求出正确的递]]></description>
</item>
<item>
    <title>Unity入门笔记</title>
    <link>http://blog.shiwj.top/unity-note/</link>
    <pubDate>Sun, 26 Jun 2022 10:48:30 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/unity-note/</guid>
    <description><![CDATA[参考 unity manual unity-essentials 系列教程 编辑器操作 场景视图导航 pan（移动视图）：使用“手”工具，按住鼠标左键拖动视图 zoom（放缩）：使用鼠标滚轮或按住 alt 和鼠标]]></description>
</item>
<item>
    <title>数字签名和数字证书</title>
    <link>http://blog.shiwj.top/digital-signatures-certificates/</link>
    <pubDate>Sat, 18 Jun 2022 14:28:00 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/digital-signatures-certificates/</guid>
    <description><![CDATA[一、数字签名 数字签名的作用是保证数据的完整性和保密性 数据完整性通过对数据做摘要保证 数据的保密性通过对数据和摘要做公钥加密保证，接收人只能用发]]></description>
</item>
<item>
    <title>计算机中的时间</title>
    <link>http://blog.shiwj.top/time/</link>
    <pubDate>Wed, 08 Jun 2022 12:29:06 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/time/</guid>
    <description><![CDATA[unix时间戳 unix时间戳是相对于UTC时间&quot;1970年1月1日 00:00:00&quot;所经过的秒数。由于是相对于UTC时间]]></description>
</item>
<item>
    <title>golang入门笔记</title>
    <link>http://blog.shiwj.top/go-gopl/</link>
    <pubDate>Tue, 26 Apr 2022 11:18:48 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/go-gopl/</guid>
    <description><![CDATA[参考《Go 程序设计语言》 看本文前最好先看 google 的a tour of go 一、程序结构 go 程序使用驼峰式命名风格 零值，变量的初始值。数字是 0，字符串是&quot;&]]></description>
</item>
</channel>
</rss>
