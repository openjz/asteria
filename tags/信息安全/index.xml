<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>信息安全 on Example Site</title>
        <link>http://blog.shiwj.top/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/</link>
        <description>Recent content in 信息安全 on Example Site</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 18 Jun 2022 14:28:00 +0800</lastBuildDate><atom:link href="http://blog.shiwj.top/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>数字签名和数字证书</title>
        <link>http://blog.shiwj.top/posts/digital-signatures-certificates/</link>
        <pubDate>Sat, 18 Jun 2022 14:28:00 +0800</pubDate>
        
        <guid>http://blog.shiwj.top/posts/digital-signatures-certificates/</guid>
        <description>&lt;h2 id=&#34;一数字签名&#34;&gt;一、数字签名&lt;/h2&gt;
&lt;p&gt;数字签名的作用是保证数据的完整性和保密性&lt;/p&gt;
&lt;p&gt;数据完整性通过对数据做摘要保证&lt;/p&gt;
&lt;p&gt;数据的保密性通过对数据和摘要做公钥加密保证，接收人只能用发送人提供的公钥才能解密消息，用其他人提供的公钥无法解密消息&lt;/p&gt;
&lt;p&gt;具体的交互流程是&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发送人对消息做加密和摘要，生成数字签名和加密信息，并将签名和信息一起发送给接收人&lt;/li&gt;
&lt;li&gt;接收人收到消息后，使用发送人的公钥校验数字签名，校验通过后，即可证明消息的完整性&lt;/li&gt;
&lt;li&gt;接收人对消息进行解密，查看消息，对消息做出答复，并用发送人的公钥对答复加密，回复给发送人&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;二数字证书&#34;&gt;二、数字证书&lt;/h2&gt;
&lt;p&gt;在使用数字签名的过程中存在一个问题，即接收人无法判断发送人的公钥是否可信，换言之，发送人提供的公钥有可能被篡改或伪造。数字证书就是为了解决公钥的可信性问题而被发明出来的。&lt;/p&gt;
&lt;p&gt;具体的做法是，由一个权威的证书颁发机构（CA）使用它自己的公钥对发送人的公钥做一个数字签名，并将这个数字签名作为证书颁发给发送人，发送人给接收人发送消息时，将证书一并附上，由接收人去验证。CA会为其自己的公钥颁发一个根证书，提前提供给用户，用户从根证书中获取到CA的公钥，对CA颁发的证书进行验证。&lt;/p&gt;
&lt;p&gt;简单来说，用户先从根证书中拿到CA的公钥，再利用CA的公钥从服务器证书中拿到服务器的公钥，然后再用服务器公钥和服务器通信。&lt;/p&gt;
&lt;h2 id=&#34;三https协议&#34;&gt;三、https协议&lt;/h2&gt;
&lt;h3 id=&#34;https和http的区别&#34;&gt;https和http的区别&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;https在http的基础上增加了SSL/TLS协议，SSL/TLS依靠证书验证服务器身份，并对浏览器和服务器之间的通信进行加密&lt;/li&gt;
&lt;li&gt;https使用443端口，http使用80端口&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;ssltls&#34;&gt;SSL/TLS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;SSL，Secure Sockets Layer&lt;/li&gt;
&lt;li&gt;TLS，Transport Layer Security&lt;/li&gt;
&lt;li&gt;SSL/TLS是对因特网上的数据传输进行身份验证和加密的协议，SSL/TLS是对ssl和tls的统称，tls更先进，更安全的ssl，正在逐渐取代ssl&lt;/li&gt;
&lt;li&gt;SSL/TLS有多个版本，使用&lt;a class=&#34;link&#34; href=&#34;https://www.howsmyssl.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How’s My SSL&lt;/a&gt;工具查看你的浏览器使用的是哪个SSL/TLS版本&lt;/li&gt;
&lt;li&gt;SSL/TLS的握手过程
&lt;ol&gt;
&lt;li&gt;客户端和服务器互相告知各自支持的SSL/TLS版本，加密算法和压缩算法&lt;/li&gt;
&lt;li&gt;客户端验证服务器证书，并获得服务器公钥&lt;/li&gt;
&lt;li&gt;双方通过协商生成会话秘钥（会话秘钥是一个对称秘钥，对称加密比公钥加密快）&lt;/li&gt;
&lt;li&gt;双方使用会话秘钥进行加密通信&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
