<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - 星</title>
        <link>http://blog.shiwj.top/posts/</link>
        <description>All Posts | 星</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>shiwj1994@foxmail.com (shiwj)</managingEditor>
            <webMaster>shiwj1994@foxmail.com (shiwj)</webMaster><lastBuildDate>Sun, 27 Jul 2025 16:28:27 &#43;0800</lastBuildDate><atom:link href="http://blog.shiwj.top/posts/" rel="self" type="application/rss+xml" /><item>
    <title>《汇编语言第4版——王爽》阅读笔记</title>
    <link>http://blog.shiwj.top/73.asemblly-wangshuang/</link>
    <pubDate>Sun, 27 Jul 2025 16:28:27 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/73.asemblly-wangshuang/</guid>
    <description><![CDATA[一、基础知识 汇编指令是机器指令便于记忆的书写格式 汇编语言有三类符号： 汇编指令 伪指令，没有对应的机器码，由编译器识别，在编译期计算 符号 CPU和]]></description>
</item>
<item>
    <title>面试八股-分布式系统</title>
    <link>http://blog.shiwj.top/53.interview-bagu-distribute-system/</link>
    <pubDate>Sat, 12 Jul 2025 09:23:22 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/53.interview-bagu-distribute-system/</guid>
    <description><![CDATA[mysql 索引 什么是索引 索引是一种能实现对表中某一列或多列的值快速查找的数据结构，常见的是 B+树 B+树是一种多叉搜索树，叶节点是数据节点，存放着指向]]></description>
</item>
<item>
    <title>霍纳规则——一种高效求解多项式的算法</title>
    <link>http://blog.shiwj.top/72.horner-rule/</link>
    <pubDate>Sun, 06 Jul 2025 17:00:50 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/72.horner-rule/</guid>
    <description><![CDATA[霍纳规则简介 霍纳规则（Horner&rsquo;s Rule）是一种高效求解多项式值的算法。它通过将多项式重写为嵌套的形式，减少了乘法和加法的]]></description>
</item>
<item>
    <title>无锁环形Buffer</title>
    <link>http://blog.shiwj.top/71.lockfree-ringbuffer/</link>
    <pubDate>Fri, 04 Jul 2025 08:49:36 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/71.lockfree-ringbuffer/</guid>
    <description><![CDATA[无锁环形队列介绍 无锁环形队列提高并发效率主要依赖以下两点： 环形队列本身是个缓冲区，可以将生产者和消费者解耦，天然具备并发读写的条件 采用CAS]]></description>
</item>
<item>
    <title>《设计模式》阅读笔记</title>
    <link>http://blog.shiwj.top/70.design-patterns/</link>
    <pubDate>Fri, 30 May 2025 15:22:00 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/70.design-patterns/</guid>
    <description><![CDATA[参考《设计模式——可复用面向对象软件的基础》 前述 设计模式整体看下来，主要讲的是该如何组织代码，如何将代码组织成可复用、可维护、可扩展的代码。]]></description>
</item>
<item>
    <title>c&#43;&#43;内存分析：VLD</title>
    <link>http://blog.shiwj.top/69.cpp-memory-analysis-vld/</link>
    <pubDate>Wed, 14 May 2025 10:56:00 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/69.cpp-memory-analysis-vld/</guid>
    <description><![CDATA[参考 https://www.cnblogs.com/yapingxin/p/18258139/use_vld_in_vs2022 介绍 Visual Leak Detector（VLD）是windows平台上的一款广泛使用的c++内存泄漏分析工具 VLD官方的版本目前停留在2.5.1，发]]></description>
</item>
<item>
    <title>c&#43;&#43;内存分析：ASan</title>
    <link>http://blog.shiwj.top/68.cpp-memory-analysis-asan/</link>
    <pubDate>Tue, 13 May 2025 15:45:47 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/68.cpp-memory-analysis-asan/</guid>
    <description><![CDATA[AddressSanitizer（ASan）是一款广泛使用的c++内存分析工具，能够检测代码中的各种内存问题（内存越界、访问野指针、非法访问]]></description>
</item>
<item>
    <title>c&#43;&#43; 运算符重载使用技巧</title>
    <link>http://blog.shiwj.top/67.cpp-operator-overloading-tricks/</link>
    <pubDate>Sun, 11 May 2025 08:59:23 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/67.cpp-operator-overloading-tricks/</guid>
    <description><![CDATA[1. 基本概念 只有一元和二元运算符能被重载，三元运算符不能重载 对于二元运算符， 重载运算符函数的第一个参数对应左侧运算对象，如果是成员函数重载，只]]></description>
</item>
<item>
    <title>c&#43;&#43; STL使用技巧</title>
    <link>http://blog.shiwj.top/66.cpp-stl-tricks/</link>
    <pubDate>Mon, 05 May 2025 14:39:26 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/66.cpp-stl-tricks/</guid>
    <description><![CDATA[参考 《C++ Primer 第5版》 1. 容器类型 顺序容器 连续内存 vector deque：双端队列 array：固定大小 string 链表 list：双向链表 forward_list：]]></description>
</item>
<item>
    <title>c&#43;&#43;模板使用技巧</title>
    <link>http://blog.shiwj.top/65.cpp-template-tricks/</link>
    <pubDate>Sun, 04 May 2025 02:20:30 &#43;0800</pubDate>
    <author>shiwj</author>
    <guid>http://blog.shiwj.top/65.cpp-template-tricks/</guid>
    <description><![CDATA[参考 《C++ Primer 第5版》 《Effective Modern C++》 0. 模板类型推导规则 参考 62.effective-modern-cpp 1. 非类型参数 例如，利用模板推导数组长度 1 2 3 4 5 template&lt;typename T, std::size_t N&gt; constexpr std::size_t ArraySize(T(&amp;)[N]) noexcept]]></description>
</item>
</channel>
</rss>
